<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	<!-- 어노테이션 사용안하는 경우 객체 생성방법 -->
	<!-- <bean id="product" class="com.company.aop.Product"></bean> -->
	
	<!-- 어노테이션은 사용하는 경우 객체 생성 방법 -->
	<!-- @Component @Service @Controller @Repository -->
	<context:component-scan base-package="com.company.aop"></context:component-scan>
	
	
	<!-- @Befor, @After, @AfterReturning, @AfterThrowing, @Around -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- AOP XML 설정 -->
	<aop:config>
		<aop:aspect ref="log">
			<!-- AOP를 적용할 기준 명시  -->
			<aop:pointcut expression="execution(* com.company.aop.Product.getInfo())" id="pointcut"/>
			<!-- <aop:pointcut expression="execution(* com.company.aop.Product.*(..))" id="pointcut"/> -->
			<!-- Advice 할 메소드 명시 -->
			<!-- 기준을 Product * get으로 잡음 -->
			<!-- <aop:before method="beforeLog" pointcut-ref="pointcut"/> -->
			<!-- <aop:after method="afterLog" pointcut-ref="pointcut"/> -->
			<aop:around method="aroundLog" pointcut-ref="pointcut"/>
			
			<!-- 기준을 Product * 전체(모든 메소드)로 잡음 -->
			<!-- <aop:after-returning method="afterReturnLog" pointcut-ref="pointcut"/> -->
			<!-- <aop:after-throwing method="afterThrowLog" pointcut-ref="pointcut"/> -->
			
		</aop:aspect>
	</aop:config>
</beans>
